// Use a stack pointer to indicate TOP of Stack
// Stacks start at the top of memory and grow downward

FF: 00
FE: 57 # Stack Pointer
FD: 45 
FC: 00
FB: 00
FA: 00
F9: 00
F8: 00
.
.
.
05: 00
04: 00
03: XX
02: XX
01: XX
00: XX <- PC

SAVE 12, R1 # save 12 into reg 1
PUSH R1 # push value in R1 to the stack
SAVE 45, R1 # save 45 into reg 1 overwriting 12
PUSH R1 # push value 45 to the stack
POP R1 # store 45 here
POP R2 # store 12
ADD R1 R2 # add 45 and 12 = 57
PUSH R1 

def add_two_numbers(a,b):
    return a + b

add_two_numbers(12,15)
